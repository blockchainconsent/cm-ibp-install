---
- name: Create the channel
  hosts: localhost
  vars_files:
    - 00-common-vars.yml
    - "{{ org_var_file }}" # 02-pfizer-endorsing-org-vars.yml
  tasks:

    - name: Create certificate authority
      ibm.blockchain_platform.certificate_authority:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        name: "{{ ca_name }}"
        zone: "{{ ca_zone | default(omit) }}"
        replicas: "{{ replicas }}"
        config_override:
          ca:
            debug: false
            affiliations:
              ibp: []
            registry:
              maxenrollments: -1
              identities:
                - name: "{{ ca_admin_enrollment_id }}"
                  pass: "{{ ca_admin_enrollment_secret }}"
                  type: client
                  maxenrollments: -1
                  attrs:
                    hf.Registrar.Roles: "*"
                    hf.Registrar.DelegateRoles: "*"
                    hf.Revoker: true
                    hf.IntermediateCA: true
                    hf.GenCRL: true
                    hf.Registrar.Attributes: "*"
                    hf.AffiliationMgr: true
            db:
              type: "{{ ca_db_type | default(omit) }}"
              datasource: "{{ datasource | default(omit)}}"
              tls:
                enabled: true
                certfiles:
                - "{{ certfiles }}"
        resources:
          ca:
            requests:
              cpu: 1000m
              memory: 400M
        storage: "{{ ca_storage | default(omit) }}"
        version: "{{ ca_version | default(omit) }}"
        wait_timeout: "{{ wait_timeout | default(omit) }}"

    - name: Enroll certificate authority admin
      ibm.blockchain_platform.enrolled_identity:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        certificate_authority: "{{ ca_name }}"
        name: "{{ ca_name }} Admin"
        enrollment_id: "{{ ca_admin_enrollment_id }}"
        enrollment_secret: "{{ ca_admin_enrollment_secret }}"
        path: "{{ playbook_dir }}/{{ ca_name }} Admin.json"

    - name: Register the organization admin
      ibm.blockchain_platform.registered_identity:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        certificate_authority: "{{ ca_name }}"
        registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
        enrollment_id: "{{ organization_admin_enrollment_id }}"
        enrollment_secret: "{{ organization_admin_enrollment_secret }}"
        max_enrollments: -1
        type: admin

    - name: Register the ordering service
      ibm.blockchain_platform.registered_identity:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        certificate_authority: "{{ ca_name }}"
        registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
        enrollment_id: "{{ ordering_service_enrollment_id }}"
        enrollment_secret: "{{ ordering_service_enrollment_secret }}"
        max_enrollments: -1
        type: orderer

    - name: Enroll the organization admin
      ibm.blockchain_platform.enrolled_identity:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        certificate_authority: "{{ ca_name }}"
        name: "{{ organization_name }} Admin"
        enrollment_id: "{{ organization_admin_enrollment_id }}"
        enrollment_secret: "{{ organization_admin_enrollment_secret }}"
        path: "{{ playbook_dir }}/{{ organization_name }} Admin.json"
      register: org_admin

    - name: Create organization
      ibm.blockchain_platform.organization:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        name: "{{ organization_name }}"
        msp_id: "{{ organization_msp_id }}"
        certificate_authority: "{{ ca_name }}"
        registrar: "{{ playbook_dir }}/{{ ca_name }} Admin.json"
        admins:
          - "{{ org_admin.enrolled_identity.cert | default(omit) }}"

    - name: Create ordering service
      ibm.blockchain_platform.ordering_service:
        state: "{{ state }}"
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        name: "{{ ordering_service_name }}"
        msp_id: "{{ organization_msp_id }}"
        nodes: "{{ ordering_service_nodes }}"
        certificate_authority: "{{ ca_name }}"
        enrollment_id: "{{ ordering_service_enrollment_id }}"
        enrollment_secret: "{{ ordering_service_enrollment_secret }}"
        admin_certificates:
          - "{{ org_admin.enrolled_identity.cert | default(omit) }}"
        resources: "{{ ordering_service_resources | default(omit) }}"
        storage: "{{ ordering_service_storage | default(omit) }}"
        version: "{{ ordering_service_version | default(omit) }}"
        wait_timeout: "{{ wait_timeout | default(omit) }}"
